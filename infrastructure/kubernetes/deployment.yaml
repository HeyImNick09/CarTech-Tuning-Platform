# ðŸš€ CarTech Platform Kubernetes Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartech-backend
  labels:
    app: cartech-backend
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cartech-backend
  template:
    metadata:
      labels:
        app: cartech-backend
    spec:
      containers:
      - name: cartech-backend
        image: cartech/backend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: cartech-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cartech-secrets
              key: redis-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartech-web
  labels:
    app: cartech-web
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cartech-web
  template:
    metadata:
      labels:
        app: cartech-web
    spec:
      containers:
      - name: cartech-web
        image: cartech/web:latest
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_API_URL
          value: "https://api.cartech-platform.com"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: cartech-backend-service
spec:
  selector:
    app: cartech-backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: cartech-web-service
spec:
  selector:
    app: cartech-web
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cartech-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
spec:
  tls:
  - hosts:
    - cartech-platform.com
    - api.cartech-platform.com
    secretName: cartech-tls
  rules:
  - host: cartech-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cartech-web-service
            port:
              number: 80
  - host: api.cartech-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cartech-backend-service
            port:
              number: 80
